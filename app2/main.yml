---
- hosts: all
  become: yes
  become_method: sudo
  remote_user: ubuntu

  tasks:
  - include_vars: aws_access_key.yml
  - include_vars: aws_secret_key.yml

  - name: update system
    shell: apt update

  - name: Install required system packages
    apt: name={{ item }} state=latest update_cache=yes
    loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv']


  - name: Add Docker GPG apt Key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add Docker Repository
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu bionic stable
      state: present

  - name: Update apt and install docker-ce
    apt: update_cache=yes name=docker-ce state=latest

  - name: Install Docker Module for Python
    pip:
      name: docker

  - name: Install Docker Module for Python
    pip:
      name: boto

  - name: Create a directory if it does not exist
    file:
      path: /tmp/jenkins       
      state: directory
      mode: '0755'

  - name: Copy docker file to server
    copy:
      src: /var/lib/jenkins/workspace/pl-ansible/app2/Dockerfile
      dest: /tmp/jenkins/Dockerfile
      mode: '0644'

  - name: Copy war to server
    copy:
      src: /var/lib/jenkins/workspace/pl-ansible/app2/app2.war
      dest: /tmp/jenkins/app2.war
      mode: '0644'

  - name: Build image
    shell:
      cmd: docker build -t tomcat_app -f ./Dockerfile .
      chdir: /tmp/jenkins/

  - name: Create container
    shell: docker run --name container3 -d -p 8080:8080 tomcat_app  

  - name: Ensure nginx is at the latest version
    apt: name=nginx state=latest

  - name: Start nginx
    service:
       name: nginx
       state: started

  - name: Copy the nginx config file and restart nginx
    copy:
      src: /var/lib/jenkins/workspace/pl-ansible/app2/nginx.cfg
      dest: /etc/nginx/sites-available/nginx.cfg

  - name: Create symlink
    file:
      src: /etc/nginx/sites-available/nginx.cfg
      dest: /etc/nginx/sites-enabled/default
      state: link

  - name: Restart nginx
    service:
      name: nginx
      state: restarted

  post_tasks:
    - name: Instance Register
      local_action:
        aws_access_key: "{{ var_aws_access_key }}"
        aws_secret_key: "{{ var_aws_secret_key }}"
        module: ec2_elb
        instance_id: i-0bd7110ce16abd140
        ec2_elbs: ELB
        state: present
        region: eu-west-1

    - name: Terminate app1
      ec2:
        aws_access_key: "{{ var_aws_access_key }}"
        aws_secret_key: "{{ var_aws_secret_key }}"
        state: 'absent'
        instance_ids: 'i-054cdad1c4b3de98d'
        region: eu-west-1
